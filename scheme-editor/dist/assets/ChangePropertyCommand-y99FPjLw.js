var h=Object.defineProperty;var p=(r,e,t)=>e in r?h(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var s=(r,e,t)=>p(r,typeof e!="symbol"?e+"":e,t);import{L as n}from"./index-DKNJtNe6.js";class l{constructor(e,t,i,o="shape"){s(this,"scheme");s(this,"elementId");s(this,"properties");s(this,"elementType");s(this,"previousProperties",{});this.scheme=e,this.elementId=t,this.properties=i,this.elementType=o}findElement(){return this.elementType==="shape"?this.scheme.shapes.find(e=>e.getId()===this.elementId):this.scheme.lines.find(e=>e.id===this.elementId)}execute(){try{const e=this.findElement();if(!e)return;const t=e.getProperties();Object.keys(this.properties).forEach(i=>{this.previousProperties[i]=t[i]}),e.setProperties(this.properties),this.scheme.notifyObservers()}catch(e){n.error(`Error changing property for ${this.elementType} ${this.elementId}`,e)}}undo(){try{const e=this.findElement();if(!e){n.warn(`${this.elementType} with id ${this.elementId} not found`);return}e.setProperties(this.previousProperties),this.scheme.notifyObservers()}catch(e){n.error(`Error reverting properties for ${this.elementType} ${this.elementId}`,e)}}}export{l as ChangePropertyCommand};
