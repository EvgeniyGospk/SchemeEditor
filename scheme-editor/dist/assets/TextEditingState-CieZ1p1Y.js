var l=Object.defineProperty;var h=(o,e,t)=>e in o?l(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var a=(o,e,t)=>h(o,typeof e!="symbol"?e+"":e,t);import{ChangePropertyCommand as r}from"./ChangePropertyCommand-C7Pmhyvu.js";import{DefaultState as p}from"./DefaultState-CS_Iqjw4.js";import{L as s}from"./index-DLCka8Hw.js";import"./DeleteElementCommand-BFpIdMFb.js";class f{constructor(){a(this,"editingShapeId","");a(this,"originalText","");a(this,"textInputElement");a(this,"currentShape");a(this,"updatePositionHandler",()=>{this.updateTextInputPosition()})}getStateName(){return"TextEditingState"}onEnterState(e,t){if(!(t!=null&&t.shapeId)){s.error("TextEditingState: No shapeId provided in args"),e.setState(new p);return}this.editingShapeId=t.shapeId,s.info(`TextEditingState: Entered for shape ${this.editingShapeId}`);const n=e.getDependencies().scheme.getShapeById(this.editingShapeId);if(!n){s.error(`TextEditingState: Shape ${this.editingShapeId} not found`),e.setState(new p);return}const d=n.getProperties();this.originalText=d.text||"",this.currentShape=n,this.createTextInput(n),this.addEventListeners()}onExitState(){s.info("TextEditingState: Exited"),this.removeEventListeners(),this.textInputElement&&(this.textInputElement.remove(),this.textInputElement=void 0),this.editingShapeId="",this.originalText="",this.currentShape=void 0}handleMouseDown(e,t){const{target:i}=e;i!==this.textInputElement&&(this.applyTextChanges(t),t.setState(new p))}handleMouseMove(){}handleMouseUp(){}handleDoubleClick(){}handleKeyDown(e,t){switch(e.key){case"Enter":e.shiftKey||(s.info("TextEditingState: Enter pressed, applying changes"),this.applyTextChanges(t),t.setState(new p));break;case"Escape":s.info("TextEditingState: Escape pressed, canceling changes"),this.textInputElement&&(this.textInputElement.value=this.originalText),t.setState(new p);break}}handleKeyUp(){}createTextInput(e){if(typeof document>"u")return;const t=e.getBounds(),i=document.querySelector("canvas");if(!i){s.error("TextEditingState: Canvas element not found");return}const n=i.getBoundingClientRect();this.textInputElement=document.createElement("textarea"),this.textInputElement.value=this.originalText,this.textInputElement.style.position="fixed",this.textInputElement.style.left=`${n.left+t.x}px`,this.textInputElement.style.top=`${n.top+t.y}px`,this.textInputElement.style.width=`${Math.max(t.width,100)}px`,this.textInputElement.style.height=`${Math.max(t.height,50)}px`,this.textInputElement.style.border="2px solid #007acc",this.textInputElement.style.borderRadius="4px",this.textInputElement.style.padding="4px",this.textInputElement.style.fontSize="14px",this.textInputElement.style.fontFamily="Arial, sans-serif",this.textInputElement.style.resize="none",this.textInputElement.style.outline="none",this.textInputElement.style.backgroundColor="white",this.textInputElement.style.zIndex="1000",this.textInputElement.style.boxShadow="0 2px 8px rgba(0,0,0,0.2)",document.body.appendChild(this.textInputElement),setTimeout(()=>{this.textInputElement&&(this.textInputElement.focus(),this.textInputElement.select())},10),s.info("TextEditingState: Created text input element at position",{canvasRect:{left:n.left,top:n.top},bounds:t,finalPosition:{left:n.left+t.x,top:n.top+t.y}})}applyTextChanges(e){if(!this.textInputElement)return;const t=this.textInputElement.value;if(t!==this.originalText){const i=e.getDependencies(),n=new r(i.scheme,this.editingShapeId,{text:t});i.commandManager.executeCommand(n),s.info(`TextEditingState: Applied text change: "${this.originalText}" -> "${t}"`)}else s.info("TextEditingState: No text changes to apply")}addEventListeners(){typeof window>"u"||(window.addEventListener("resize",this.updatePositionHandler),window.addEventListener("scroll",this.updatePositionHandler))}removeEventListeners(){typeof window>"u"||(window.removeEventListener("resize",this.updatePositionHandler),window.removeEventListener("scroll",this.updatePositionHandler))}updateTextInputPosition(){if(!this.currentShape)return;const e=this.currentShape.getBounds(),t=document.querySelector("canvas");if(!t)return;const i=t.getBoundingClientRect();this.textInputElement&&(this.textInputElement.style.left=`${i.left+e.x}px`,this.textInputElement.style.top=`${i.top+e.y}px`)}}export{f as TextEditingState};
