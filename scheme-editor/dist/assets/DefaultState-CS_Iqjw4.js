const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/TextEditingState-CieZ1p1Y.js","assets/ChangePropertyCommand-C7Pmhyvu.js","assets/index-DLCka8Hw.js","assets/index-EStzvkZq.css","assets/DeleteElementCommand-BFpIdMFb.js"])))=>i.map(i=>d[i]);
var I=Object.defineProperty;var b=(m,i,s)=>i in m?I(m,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):m[i]=s;var d=(m,i,s)=>b(m,typeof i!="symbol"?i+"":i,s);import{L as n,_ as x}from"./index-DLCka8Hw.js";import{DeleteElementCommand as M}from"./DeleteElementCommand-BFpIdMFb.js";class D{constructor(i,s,t,a){d(this,"shapes");d(this,"deltaX");d(this,"deltaY");d(this,"scheme");this.shapes=i,this.deltaX=s,this.deltaY=t,this.scheme=a}execute(){this.shapes.forEach(i=>{i.move(this.deltaX,this.deltaY)}),this.scheme.notifyObservers()}undo(){this.shapes.forEach(i=>{i.move(-this.deltaX,-this.deltaY)}),this.scheme.notifyObservers()}}class ${constructor(){d(this,"isDragging",!1);d(this,"dragStartX",0);d(this,"dragStartY",0);d(this,"isSelectionBoxActive",!1);d(this,"selectionBoxStart",{x:0,y:0});d(this,"currentSelectionBox",{x:0,y:0,width:0,height:0,visible:!1});d(this,"lastSelectionBoxUpdate",0);d(this,"lastDragUpdate",0);d(this,"dragOriginalPositions",new Map);d(this,"clickedSelectedShapeInMultiSelection",null);d(this,"actualDragOccurred",!1)}getStateName(){return"DefaultState"}onEnterState(){n.info("DefaultState: Entered default state"),this.isDragging=!1,this.isSelectionBoxActive=!1,this.currentSelectionBox.visible=!1,typeof document<"u"&&(document.body.style.cursor="default")}onExitState(){n.info("DefaultState: Exited default state"),this.isDragging=!1,this.isSelectionBoxActive=!1}handleMouseDown(i,s){const{x:t,y:a,target:l,ctrlKey:e,shiftKey:o}=i,c=s.getDependencies();if(c)if(l&&this.isShapeTarget(l)){const h=this.getShapeIdFromTarget(l);if(h){const g=c.selectionManager.getSelectedIds(),u=g.includes(h);!o&&!e&&(u?g.length>1?this.clickedSelectedShapeInMultiSelection=h:this.clickedSelectedShapeInMultiSelection=null:(c.selectionManager.clearSelection(),this.clickedSelectedShapeInMultiSelection=null)),!u&&!e?c.selectionManager.selectElement(h,!1):e?u?c.selectionManager.deselectElement(h):c.selectionManager.selectElement(h,!0):n.debug("DefaultState: Shape already selected - no selection change needed");const r=c.selectionManager.getSelectedIds();n.debug("DefaultState: Selected IDs after processing:",r),this.dragOriginalPositions.clear(),r.forEach(f=>{const S=c.scheme.getShapeById(f);S&&this.dragOriginalPositions.set(f,{x:S.x,y:S.y})}),this.isDragging=!0,this.dragStartX=t,this.dragStartY=a,this.actualDragOccurred=!1,n.debug(`DefaultState: Starting drag with ${r.length} shapes selected`)}}else n.debug("DefaultState: Click on empty space, starting selection box"),!e&&!o&&c.selectionManager.clearSelection(),this.isSelectionBoxActive=!0,this.selectionBoxStart={x:t,y:a},this.currentSelectionBox={x:t,y:a,width:0,height:0,visible:!0}}handleMouseMove(i,s){const{x:t,y:a}=i,l=s.getDependencies();if(!l)return;const e=performance.now();if(this.isDragging){const o=t-this.dragStartX,c=a-this.dragStartY;e-this.lastDragUpdate>=8&&(l.selectionManager.getSelectedIds().forEach(g=>{const u=l.scheme.getShapeById(g),r=this.dragOriginalPositions.get(g);u&&r&&(u.x=r.x+o,u.y=r.y+c)}),l.scheme.notifyObservers(),this.lastDragUpdate=e)}else if(this.isSelectionBoxActive&&e-this.lastSelectionBoxUpdate>=8){const o=this.selectionBoxStart.x,c=this.selectionBoxStart.y;this.currentSelectionBox={x:Math.min(o,t),y:Math.min(c,a),width:Math.abs(t-o),height:Math.abs(a-c),visible:!0},this.lastSelectionBoxUpdate=e}}handleMouseUp(i,s){const{x:t,y:a,ctrlKey:l}=i,e=s.getDependencies();if(!e)return;const o=e.selectionManager.getSelectedIds();if(n.debug("DefaultState: MouseUp - Selected IDs at start:",o),this.isSelectionBoxActive){const h=Math.abs(t-this.selectionBoxStart.x),g=Math.abs(a-this.selectionBoxStart.y);h>5||g>5?(n.debug("DefaultState: Selection box area select"),this.selectElementsInArea(this.selectionBoxStart.x,this.selectionBoxStart.y,t,a,e,l)):l||(n.debug("DefaultState: Small selection box - clearing selection"),e.selectionManager.clearSelection())}if(this.isDragging){const h=t-this.dragStartX,g=a-this.dragStartY;if(n.debug(`DefaultState: Drag ended - delta: (${h}, ${g}), actualDragOccurred: ${this.actualDragOccurred}`),Math.abs(h)>1||Math.abs(g)>1){this.actualDragOccurred=!0;const u=e.selectionManager.getSelectedIds();n.debug(`DefaultState: Real drag occurred - moving ${u.length} shapes`);const r=u.map(f=>e.scheme.getShapeById(f)).filter(f=>f!==void 0);if(r.length>0){this.dragOriginalPositions.forEach((S,y)=>{const p=e.scheme.getShapeById(y);p&&(p.x=S.x,p.y=S.y)});const f=new D(r,h,g,e.scheme);e.commandManager.executeCommand(f)}}n.debug(`DefaultState: Checking multi-selection reset - actualDragOccurred: ${this.actualDragOccurred}, clickedSelectedShapeInMultiSelection: ${this.clickedSelectedShapeInMultiSelection}`),!this.actualDragOccurred&&this.clickedSelectedShapeInMultiSelection&&(n.debug("DefaultState: No drag occurred in multi-selection - resetting to single shape:",this.clickedSelectedShapeInMultiSelection),e.selectionManager.clearSelection(),e.selectionManager.selectElement(this.clickedSelectedShapeInMultiSelection,!1))}this.isDragging=!1,this.isSelectionBoxActive=!1,this.currentSelectionBox.visible=!1,this.dragOriginalPositions.clear(),this.clickedSelectedShapeInMultiSelection=null,this.actualDragOccurred=!1;const c=e.selectionManager.getSelectedIds();n.debug("DefaultState: MouseUp - Selected IDs at end:",c),e.scheme.notifyObservers()}handleDoubleClick(i,s){const{target:t}=i;if(t&&this.isShapeTarget(t)){const a=this.getShapeIdFromTarget(t);if(a){const l=s.getDependencies(),e=l==null?void 0:l.scheme.getShapeById(a);if(!e){n.warn(`DefaultState: Shape ${a} not found for double click`);return}const o=e.getType();if(o==="umlClass"||o==="umlComponent"){n.info(`DefaultState: Double click on ${o} ${a} - text editing disabled for UML shapes. Use Properties panel instead.`);return}n.info(`DefaultState: Double click on shape ${a} (${o}) - starting text editing`),x(async()=>{const{TextEditingState:c}=await import("./TextEditingState-CieZ1p1Y.js");return{TextEditingState:c}},__vite__mapDeps([0,1,2,3,4])).then(({TextEditingState:c})=>{s.setState(new c,{shapeId:a})})}}}handleKeyDown(i,s){const t=s.getDependencies();if(t)switch(i.key){case"Delete":case"Backspace":this.deleteSelectedElements(t);break;case"a":case"A":i.ctrlKey&&this.selectAllElements(t);break;case"z":case"Z":i.ctrlKey&&n.debug("DefaultState: Undo/Redo handled by EditorScreen");break;case"y":case"Y":i.ctrlKey&&n.debug("DefaultState: Undo/Redo handled by EditorScreen");break;case"s":case"S":i.ctrlKey&&n.info("DefaultState: Save shortcut pressed - delegating to higher level handler");break;case"ArrowUp":this.moveSelectedElementsByKey(0,-1,t,i.shiftKey);break;case"ArrowDown":this.moveSelectedElementsByKey(0,1,t,i.shiftKey);break;case"ArrowLeft":this.moveSelectedElementsByKey(-1,0,t,i.shiftKey);break;case"ArrowRight":this.moveSelectedElementsByKey(1,0,t,i.shiftKey);break;case"Escape":this.isDragging&&(this.dragOriginalPositions.forEach((a,l)=>{const e=t.scheme.getShapeById(l);e&&(e.x=a.x,e.y=a.y)}),t.scheme.notifyObservers(),this.isDragging=!1,this.dragOriginalPositions.clear()),t.selectionManager.clearSelection();break}}handleKeyUp(){}isShapeTarget(i){var a;const s=i,t=(a=s==null?void 0:s.constructor)==null?void 0:a.name;if(t==="Stage"||t==="Stage2"||t==="Layer"||t==="Layer2"||t!=null&&t.startsWith("Stage")||t!=null&&t.startsWith("Layer"))return n.debug(`DefaultState: isShapeTarget - Stage/Layer detected: ${t}`),!1;if(i!=null&&typeof i=="object"){const l=this.getShapeIdFromTarget(i);return n.debug(`DefaultState: isShapeTarget - shapeId found: "${l}"`),!!(l&&l.length>0)}return n.debug("DefaultState: isShapeTarget - target is not an object"),!1}getShapeIdFromTarget(i){const s=i;n.debug("DefaultState: getShapeIdFromTarget - checking target:",i);const t=e=>e.length>0&&!e.startsWith("connection-point-")&&!e.startsWith("temp-");if(s.attrs){if(s.attrs.lineId&&typeof s.attrs.lineId=="string"){const e=s.attrs.lineId;if(t(e))return n.debug(`DefaultState: getShapeIdFromTarget - found lineId: "${e}"`),e}if(s.attrs["data-shape-id"]&&typeof s.attrs["data-shape-id"]=="string"){const e=s.attrs["data-shape-id"];if(t(e))return n.debug(`DefaultState: getShapeIdFromTarget - found data-shape-id: "${e}"`),e}if(s.attrs.shapeId&&typeof s.attrs.shapeId=="string"){const e=s.attrs.shapeId;if(t(e))return n.debug(`DefaultState: getShapeIdFromTarget - found shapeId: "${e}"`),e}if(s.attrs.id&&typeof s.attrs.id=="string"){const e=s.attrs.id;if(t(e))return n.debug(`DefaultState: getShapeIdFromTarget - found attrs.id: "${e}"`),e}}if(s.id){if(typeof s.id=="string"&&t(s.id))return n.debug(`DefaultState: getShapeIdFromTarget - found string id: "${s.id}"`),s.id;if(typeof s.id=="function"){const e=s.id();if(typeof e=="string"&&t(e))return n.debug(`DefaultState: getShapeIdFromTarget - found function id result: "${e}"`),e}}if(s.name&&typeof s.name=="function"){const e=s.name();if(typeof e=="string"&&t(e))return n.debug(`DefaultState: getShapeIdFromTarget - found name result: "${e}"`),e}let a=s.parent,l=0;for(;a&&l<5;){if(n.debug(`DefaultState: getShapeIdFromTarget - checking parent level ${l}:`,a),a.attrs){if(a.attrs.lineId&&typeof a.attrs.lineId=="string"){const e=a.attrs.lineId;if(t(e))return n.debug(`DefaultState: getShapeIdFromTarget - returning parent lineId: "${e}"`),e}if(a.attrs["data-shape-id"]&&typeof a.attrs["data-shape-id"]=="string"){const e=a.attrs["data-shape-id"];if(t(e))return n.debug(`DefaultState: getShapeIdFromTarget - returning parent data-shape-id: "${e}"`),e}if(a.attrs.shapeId&&typeof a.attrs.shapeId=="string"){const e=a.attrs.shapeId;if(t(e))return n.debug(`DefaultState: getShapeIdFromTarget - returning parent attrs.shapeId: "${e}"`),e}if(a.attrs.id&&typeof a.attrs.id=="string"){const e=a.attrs.id;if(t(e))return n.debug(`DefaultState: getShapeIdFromTarget - returning parent attrs.id: "${e}"`),e}}if(a.name&&typeof a.name=="function"){const e=a.name();if(n.debug(`DefaultState: getShapeIdFromTarget - parent name: "${e}"`),typeof e=="string"&&t(e))return n.debug(`DefaultState: getShapeIdFromTarget - returning parent name: "${e}"`),e}if(a.id){if(typeof a.id=="string"&&t(a.id))return n.debug(`DefaultState: getShapeIdFromTarget - returning parent string id: "${a.id}"`),a.id;if(typeof a.id=="function"){const e=a.id();if(typeof e=="string"&&t(e))return n.debug(`DefaultState: getShapeIdFromTarget - returning parent function id: "${e}"`),e}}a=a.parent,l++}return n.debug("DefaultState: getShapeIdFromTarget - no ID found, returning null"),null}moveSelectedElements(i,s,t){const l=t.selectionManager.getSelectedIds().map(e=>t.scheme.getShapeById(e)).filter(e=>e!==void 0);if(l.length>0){const e=new D(l,i,s,t.scheme);t.commandManager.executeCommand(e)}}selectElementsInArea(i,s,t,a,l,e=!1){const o=Math.min(i,t),c=Math.max(i,t),h=Math.min(s,a),g=Math.max(s,a);e||l.selectionManager.clearSelection(),l.scheme.getShapes().forEach(u=>{const r=u.getProperties();let f=r.x,S=r.x,y=r.y,p=r.y;r.width&&r.height?(f=r.x,S=r.x+r.width,y=r.y,p=r.y+r.height):r.radius?(f=r.x-r.radius,S=r.x+r.radius,y=r.y-r.radius,p=r.y+r.radius):(f=r.x-50/2,S=r.x+50/2,y=r.y-50/2,p=r.y+50/2),!(S<o||f>c||p<h||y>g)&&l.selectionManager.selectElement(u.getId(),!0)})}deleteSelectedElements(i){const s=i.selectionManager.getSelectedIds();if(s.length>0){const t=new M(i.scheme,s);i.commandManager.executeCommand(t),i.selectionManager.clearSelection()}}selectAllElements(i){i.selectionManager.clearSelection(),i.scheme.getShapes().forEach(s=>{i.selectionManager.selectElement(s.getId(),!0)})}moveSelectedElementsByKey(i,s,t,a){const l=a?10:1;this.moveSelectedElements(i*l,s*l,t)}getSelectionBox(){return this.currentSelectionBox}}export{$ as DefaultState};
