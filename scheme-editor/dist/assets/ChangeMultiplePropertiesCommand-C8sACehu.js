var h=Object.defineProperty;var m=(i,s,e)=>s in i?h(i,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[s]=e;var n=(i,s,e)=>m(i,typeof s!="symbol"?s+"":s,e);import{L as p}from"./index-DKNJtNe6.js";class d{constructor(s,e,t,r="shape"){n(this,"scheme");n(this,"elementIds");n(this,"properties");n(this,"elementType");n(this,"previousChanges",[]);this.scheme=s,this.elementIds=e,this.properties=t,this.elementType=r}findElements(){const s=new Map;return this.elementType==="shape"?this.scheme.shapes.forEach(e=>{const t=e.getId();typeof t=="string"&&s.set(t,{id:t,getProperties:()=>e.getProperties(),setProperties:r=>e.setProperties(r)})}):this.scheme.lines.forEach(e=>{s.set(e.id,{id:e.id,getProperties:()=>e.getProperties(),setProperties:t=>e.setProperties(t)})}),this.elementIds.map(e=>{const t=s.get(e);return t||(p.warn(`${this.elementType} with id ${e} not found`),null)}).filter(e=>e!==null)}execute(){this.previousChanges=[],this.findElements().forEach(e=>{const t=e.getProperties(),r={};Object.keys(this.properties).forEach(o=>{r[o]=t[o]}),this.previousChanges.push({elementId:e.id,elementType:this.elementType,previousProperties:r}),e.setProperties(this.properties)}),this.scheme.notifyObservers()}undo(){const s=this.findElements(),e=new Map(s.map(t=>[t.id,t]));this.previousChanges.forEach(t=>{const r=e.get(t.elementId);r?r.setProperties(t.previousProperties):p.warn(`${t.elementType} with id ${t.elementId} not found`)}),this.scheme.notifyObservers()}}export{d as ChangeMultiplePropertiesCommand};
